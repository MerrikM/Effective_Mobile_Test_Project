// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscriptions/create": {
            "post": {
                "description": "Создаёт новую подписку с указанием пользователя, сервиса, стоимости и периода",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Создание подписки",
                "parameters": [
                    {
                        "description": "Детали подписки",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SubscriptionCreateResponse"
                        }
                    },
                    "400": {
                        "description": "неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ошибка создания подписки",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/delete/{id}": {
            "delete": {
                "description": "Удаляет подписку по её идентификатору",
                "tags": [
                    "Подписки"
                ],
                "summary": "Удалить подписку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "подписка успешно удалена"
                    },
                    "400": {
                        "description": "неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "не удалось удалить подписку",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/get/{id}": {
            "get": {
                "description": "Возвращает подписку по её уникальному идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Получение подписки по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SubscriptionDetails"
                        }
                    },
                    "400": {
                        "description": "неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "не удалось поулчить подписку",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/total-cost": {
            "get": {
                "description": "Возвращает сумму всех подписок пользователя с возможностью фильтрации по сервису и диапазону дат",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Получение общей стоимости подписок пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID пользователя",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название сервиса (опционально)",
                        "name": "service_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата начала (формат DD-MM-YYYY, по умолчанию 01-01-2000)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата окончания (формат DD-MM-YYYY)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.TotalCostResponse"
                        }
                    },
                    "400": {
                        "description": "ошибка параметров запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/update/{id}": {
            "put": {
                "description": "Обновляет информацию о подписке по заданному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Обновить подписку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные подписки",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SubscriptionUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "неверный ID или формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "не удалось обновить информацию по подписке",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/user/{uuid}": {
            "get": {
                "description": "Возвращает список всех подписок по UUID пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Получение подписок пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID пользователя",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SubscriptionDetails"
                            }
                        }
                    },
                    "404": {
                        "description": "не удалось получить подписки",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateUpdateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "10-12-2027"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-01-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "handler.SubscriptionCreateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "подписка успешно создана"
                },
                "subscription": {
                    "$ref": "#/definitions/model.SubscriptionDetails"
                }
            }
        },
        "handler.SubscriptionUpdateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "подписка успешно обновлена"
                }
            }
        },
        "handler.TotalCostResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "общая_стоимость": {
                    "type": "integer"
                }
            }
        },
        "model.SubscriptionDetails": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Subscription API",
	Description:      "Сервис управления подписками",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
